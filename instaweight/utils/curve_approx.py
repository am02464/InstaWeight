import numpy as np 
from matplotlib import pyplot as plt
import integeration
import random
import math

depth = np.load('C:\\users\\ateeb\\desktop\\fahad_data\\1001.npy')

def main(partitions = 10 , depth = depth):

	#x1 , y1 , x2 , y2  = 788 , 298 , 788 , 530 #1042
	#x1 , y1 , x2 , y2  = 624,383 , 624,654 #1594
	#x1 , y1 , x2 , y2  = 505,111 , 505,453 #1000.jpg
	#x1 , y1 , x2 , y2  = 822,194 , 822,462 #1019
	#x1 , y1 , x2 , y2  = 661,307 , 661,647 #1335
	#x1 , y1 , x2 , y2  = 619,312 , 619,618 #1321
	#x1 , y1 , x2 , y2  = 635,462 , 635,622 #1339
	#x1 , y1 , x2 , y2  = 568,289 , 568,527 #1190
	#x1 , y1 , x2 , y2  = 634,329 , 634,534 #1622
	#x1 , y1 , x2 , y2  = 629,309 , 629,550 #1639
	#x1 , y1 , x2 , y2  = 487,357 , 488,647 #1397
	x1 , y1 , x2 , y2  = 647,184 , 647,501 #1001
	#x1 , y1 , x2 , y2  = 670,379 , 670,563 #1502
	#x1 , y1 , x2 , y2  = 627,458 , 627,700 #1444


	#depth_vec  = [1.4760000701062381, 1.4680000697262585, 1.4650000695837662, 1.4630000694887713, 1.460000069346279, 1.456000069156289, 1.4530000690137967, 1.4500000688713044, 1.449000068823807, 1.4460000686813146, 1.4450000686338171, 1.4410000684438273, 1.4410000684438273, 1.4400000683963299, 1.4390000683488324, 1.4370000682538375, 1.43600006820634, 1.4350000681588426, 1.4330000680638477, 1.4330000680638477, 1.4310000679688528, 1.429000067873858, 1.4280000678263605, 1.427000067778863, 1.4260000677313656, 1.4260000677313656, 1.4240000676363707, 1.4230000675888732, 1.4230000675888732, 1.4220000675413758, 1.4220000675413758, 1.4220000675413758, 1.4220000675413758, 1.4220000675413758, 1.4220000675413758, 1.4230000675888732, 1.4230000675888732, 1.4240000676363707, 1.4260000677313656, 1.4260000677313656, 1.427000067778863, 1.427000067778863, 1.427000067778863, 1.4280000678263605, 1.427000067778863, 1.427000067778863, 1.4280000678263605, 1.4280000678263605, 1.4280000678263605, 1.427000067778863, 1.4260000677313656, 1.4260000677313656, 1.4260000677313656, 1.4260000677313656, 1.427000067778863, 1.427000067778863, 1.427000067778863, 1.4280000678263605, 1.429000067873858, 1.4310000679688528, 1.4320000680163503, 1.4330000680638477, 1.4350000681588426, 1.4350000681588426, 1.43600006820634, 1.43600006820634, 1.43600006820634, 1.4370000682538375, 1.4390000683488324, 1.4390000683488324, 1.4390000683488324, 1.4390000683488324, 1.4400000683963299, 1.4400000683963299, 1.4410000684438273, 1.4410000684438273, 1.4410000684438273, 1.4420000684913248, 1.4440000685863197, 1.4440000685863197, 1.4450000686338171, 1.4460000686813146, 1.4460000686813146, 1.4460000686813146, 1.4480000687763095, 1.449000068823807, 1.449000068823807, 1.449000068823807, 1.4500000688713044, 1.449000068823807, 1.4500000688713044, 1.4500000688713044, 1.4500000688713044, 1.4500000688713044, 1.4500000688713044, 1.4500000688713044, 1.4500000688713044, 1.4500000688713044, 1.4500000688713044, 1.449000068823807, 1.449000068823807, 1.449000068823807, 1.449000068823807, 1.449000068823807, 1.4460000686813146, 1.4460000686813146, 1.4480000687763095, 1.4460000686813146, 1.4460000686813146, 1.4460000686813146, 1.4460000686813146, 1.4460000686813146, 1.4460000686813146, 1.4460000686813146, 1.4460000686813146, 1.4460000686813146, 1.4460000686813146, 1.449000068823807, 1.449000068823807, 1.449000068823807, 1.449000068823807, 1.449000068823807, 1.4500000688713044, 1.4530000690137967, 1.4530000690137967, 1.4540000690612942, 1.456000069156289, 1.4570000692037866, 1.4610000693937764, 1.4640000695362687, 1.4640000695362687, 1.467000069678761, 1.4680000697262585, 1.469000069773756, 1.4720000699162483, 1.4730000699637458, 1.4760000701062381, 1.478000070201233, 1.4790000702487305, 1.480000070296228, 1.4820000703912228, 1.4830000704387203, 1.4830000704387203, 1.4850000705337152, 1.4850000705337152, 1.4850000705337152, 1.4850000705337152, 1.4850000705337152, 1.4830000704387203, 1.4830000704387203, 1.4830000704387203, 1.4830000704387203, 1.4820000703912228, 1.4820000703912228, 1.4820000703912228, 1.4820000703912228, 1.4820000703912228, 1.4820000703912228, 1.4820000703912228, 1.4820000703912228, 1.4830000704387203, 1.4830000704387203, 1.4830000704387203, 1.4830000704387203, 1.4850000705337152, 1.4860000705812126, 1.48700007062871, 1.489000070723705, 1.4900000707712024, 1.4900000707712024, 1.4920000708661973, 1.4920000708661973, 1.4930000709136948, 1.4930000709136948, 1.4930000709136948, 1.4930000709136948, 1.4920000708661973, 1.4920000708661973, 1.4900000707712024, 1.4920000708661973, 1.4900000707712024, 1.4900000707712024, 1.4900000707712024, 1.489000070723705, 1.489000070723705, 1.489000070723705, 1.48700007062871, 1.48700007062871, 1.4860000705812126, 1.4850000705337152, 1.4850000705337152, 1.4850000705337152, 1.4830000704387203, 1.4830000704387203, 1.4820000703912228, 1.480000070296228, 1.4790000702487305, 1.4790000702487305, 1.478000070201233, 1.4760000701062381, 1.4750000700587407, 1.4750000700587407, 1.4730000699637458, 1.4720000699162483, 1.4710000698687509, 1.4710000698687509, 1.469000069773756, 1.4680000697262585, 1.467000069678761, 1.4650000695837662, 1.4650000695837662, 1.4640000695362687, 1.460000069346279, 1.460000069346279, 1.458000069251284, 1.4570000692037866, 1.456000069156289, 1.4540000690612942, 1.4520000689662993, 1.4500000688713044, 1.4500000688713044, 1.4500000688713044, 1.4500000688713044, 1.4500000688713044, 1.4520000689662993, 1.4520000689662993, 1.4540000690612942, 1.456000069156289, 1.458000069251284, 1.460000069346279, 1.4610000693937764, 1.4630000694887713, 1.4640000695362687, 1.4650000695837662, 1.4650000695837662, 1.4650000695837662, 1.4650000695837662, 1.4650000695837662, 1.4650000695837662, 1.4640000695362687, 1.4630000694887713, 1.4610000693937764, 1.460000069346279, 1.458000069251284, 1.456000069156289, 1.4540000690612942, 1.4520000689662993, 1.4500000688713044, 1.449000068823807, 1.4480000687763095, 1.4460000686813146, 1.4460000686813146, 1.4450000686338171, 1.4450000686338171, 1.4460000686813146, 1.4460000686813146, 1.4480000687763095, 1.4460000686813146, 1.4460000686813146, 1.4450000686338171, 1.4450000686338171, 1.4440000685863197, 1.4420000684913248, 1.4400000683963299, 1.4400000683963299, 1.4370000682538375, 1.43600006820634, 1.4350000681588426, 1.4330000680638477, 1.4330000680638477, 1.4320000680163503, 1.4310000679688528, 1.429000067873858, 1.429000067873858, 1.429000067873858, 1.4280000678263605, 1.4280000678263605, 1.427000067778863, 1.427000067778863, 1.427000067778863, 1.427000067778863, 1.4260000677313656, 1.4260000677313656, 1.4260000677313656, 1.4260000677313656, 1.429000067873858, 1.4310000679688528, 1.4320000680163503, 1.4350000681588426, 1.43600006820634, 1.4370000682538375, 1.4450000686338171, 1.449000068823807, 1.4500000688713044, 1.4520000689662993, 1.4520000689662993, 1.4540000690612942, 1.4530000690137967, 1.4500000688713044, 1.4500000688713044, 1.449000068823807, 1.4460000686813146, 1.4450000686338171, 1.4420000684913248, 1.4410000684438273, 1.4390000683488324, 1.4370000682538375, 1.4370000682538375, 1.43600006820634, 1.43600006820634, 1.4350000681588426, 1.4350000681588426, 1.43600006820634, 1.4390000683488324, 1.4390000683488324, 1.4410000684438273, 1.4420000684913248, 1.4440000685863197, 1.4450000686338171, 1.4460000686813146, 1.4460000686813146, 1.4450000686338171, 1.4450000686338171, 1.4440000685863197, 1.4440000685863197, 1.4440000685863197, 1.4440000685863197, 1.4450000686338171, 1.4450000686338171, 1.4480000687763095, 1.4460000686813146, 1.4460000686813146, 1.4480000687763095, 1.449000068823807, 1.449000068823807, 1.449000068823807, 1.4500000688713044, 1.4500000688713044, 1.4520000689662993, 1.4530000690137967, 1.4540000690612942, 1.456000069156289, 1.4570000692037866, 1.458000069251284, 1.458000069251284, 1.458000069251284, 1.4570000692037866, 1.4570000692037866, 1.4530000690137967, 1.4500000688713044, 1.4480000687763095, 1.4440000685863197, 1.4400000683963299, 1.4370000682538375, 1.4330000680638477, 1.4310000679688528, 1.429000067873858, 1.427000067778863, 1.4260000677313656, 1.4260000677313656, 1.4240000676363707, 1.4230000675888732, 1.4220000675413758, 1.4200000674463809, 1.4200000674463809, 1.4200000674463809, 1.4200000674463809, 1.4200000674463809, 1.4220000675413758, 1.4230000675888732, 1.4230000675888732, 1.4240000676363707, 1.4260000677313656, 1.427000067778863, 1.4280000678263605, 1.429000067873858, 1.4310000679688528, 1.4320000680163503, 1.4350000681588426, 1.4370000682538375, 1.4370000682538375, 1.4390000683488324, 1.4390000683488324, 1.4400000683963299, 1.4390000683488324, 1.4390000683488324, 1.4350000681588426, 1.4350000681588426, 1.4330000680638477, 1.4330000680638477, 1.4320000680163503, 1.4310000679688528, 1.4310000679688528, 1.4310000679688528, 1.429000067873858, 1.429000067873858, 1.429000067873858, 1.4310000679688528, 1.4310000679688528, 1.4310000679688528, 1.4310000679688528, 1.4310000679688528, 1.4310000679688528, 1.4320000680163503, 1.4320000680163503, 1.4330000680638477, 1.4350000681588426, 1.4350000681588426, 1.4370000682538375, 1.4370000682538375, 1.4390000683488324, 1.4390000683488324, 1.4400000683963299, 1.4400000683963299, 1.4400000683963299, 1.4400000683963299, 1.4400000683963299, 1.4400000683963299, 1.4390000683488324, 1.4390000683488324, 1.4370000682538375, 1.4370000682538375, 1.4370000682538375, 1.4370000682538375, 1.4370000682538375, 1.4370000682538375, 1.4370000682538375, 1.4370000682538375, 1.4370000682538375, 1.4390000683488324, 1.4400000683963299, 1.4410000684438273, 1.4410000684438273, 1.4440000685863197, 1.4450000686338171, 1.4460000686813146, 1.449000068823807, 1.4520000689662993, 1.4530000690137967, 1.456000069156289, 1.458000069251284, 1.460000069346279, 1.4610000693937764, 1.4630000694887713, 1.4640000695362687, 1.4650000695837662, 1.467000069678761, 1.4640000695362687, 1.4650000695837662, 1.4640000695362687, 1.4640000695362687, 1.4640000695362687, 1.4630000694887713, 1.460000069346279, 1.458000069251284, 1.458000069251284, 1.4570000692037866, 1.4570000692037866, 1.4570000692037866, 1.456000069156289, 1.456000069156289, 1.456000069156289, 1.456000069156289, 1.456000069156289, 1.456000069156289, 1.456000069156289, 1.4570000692037866, 1.4570000692037866, 1.4570000692037866, 1.4570000692037866, 1.460000069346279, 1.460000069346279, 1.460000069346279, 1.460000069346279, 1.460000069346279, 1.460000069346279, 1.460000069346279, 1.460000069346279, 1.460000069346279, 1.460000069346279, 1.458000069251284, 1.458000069251284, 1.458000069251284, 1.460000069346279, 1.460000069346279, 1.460000069346279, 1.4610000693937764, 1.4610000693937764, 1.4610000693937764, 1.4610000693937764, 1.4630000694887713, 1.4630000694887713, 1.460000069346279, 1.460000069346279, 1.460000069346279, 1.458000069251284, 1.4570000692037866, 1.4570000692037866, 1.4540000690612942, 1.4540000690612942, 1.4530000690137967, 1.4530000690137967, 1.4540000690612942, 1.4530000690137967, 1.4540000690612942, 1.456000069156289, 1.4570000692037866, 1.460000069346279, 1.4610000693937764, 1.4640000695362687, 1.4650000695837662, 1.4680000697262585, 1.469000069773756, 1.4710000698687509, 1.4720000699162483, 1.4730000699637458, 1.4730000699637458, 1.4750000700587407, 1.4760000701062381, 1.478000070201233, 1.4790000702487305, 1.480000070296228, 1.4820000703912228, 1.4830000704387203, 1.4850000705337152, 1.4860000705812126, 1.489000070723705, 1.4900000707712024, 1.4930000709136948, 1.4930000709136948, 1.4960000710561872, 1.4990000711986795, 1.4990000711986795, 1.4990000711986795, 1.4990000711986795, 1.500000071246177, 1.5020000713411719, 1.5030000713886693, 1.5060000715311617, 1.509000071673654, 1.5100000717211515, 1.5120000718161464, 1.5150000719586387, 1.5190000721486285, 1.520000072196126, 1.520000072196126, 1.5220000722911209, 1.5220000722911209, 1.5230000723386183, 1.5260000724811107, 1.5280000725761056, 1.531000072718598, 1.5350000729085878, 1.53800007305108, 1.5430000732885674, 1.5440000733360648, 1.5440000733360648, 1.5440000733360648, 1.5440000733360648, 1.5460000734310597, 1.5440000733360648, 1.5430000732885674, 1.5410000731935725, 1.540000073146075, 1.53800007305108, 1.540000073146075, 1.53800007305108, 1.5370000730035827, 1.5350000729085878, 1.5350000729085878, 1.5350000729085878, 1.540000073146075, 1.540000073146075, 1.540000073146075, 1.540000073146075, 1.5410000731935725, 1.5430000732885674, 1.5430000732885674, 1.5410000731935725, 1.540000073146075, 1.53800007305108, 1.53800007305108, 1.5410000731935725, 1.5410000731935725, 1.5410000731935725, 1.5410000731935725, 1.5430000732885674, 1.5460000734310597, 1.549000073573552, 1.5500000736210495, 1.5530000737635419, 1.5560000739060342, 1.5580000740010291, 1.5630000742385164, 1.5660000743810087, 1.569000074523501, 1.5720000746659935, 1.5750000748084858, 1.5770000749034807, 1.5780000749509782, 1.5810000750934705, 1.5830000751884654, 1.5850000752834603, 1.5860000753309578, 1.5860000753309578, 1.5860000753309578, 1.5860000753309578, 1.5860000753309578, 1.5850000752834603, 1.5830000751884654, 1.5810000750934705, 1.580000075045973, 1.5780000749509782, 1.5770000749034807, 1.5750000748084858, 1.573000074713491, 1.5720000746659935, 1.5700000745709985, 1.5700000745709985, 1.569000074523501, 1.569000074523501, 1.569000074523501, 1.569000074523501, 1.569000074523501, 1.569000074523501, 1.5700000745709985, 1.5720000746659935, 1.573000074713491, 1.5770000749034807, 1.5780000749509782, 1.5810000750934705, 1.5830000751884654, 1.5860000753309578, 1.5880000754259527, 1.5890000754734501, 1.591000075568445, 1.591000075568445, 1.59300007566344, 1.59300007566344, 1.59300007566344, 1.59300007566344, 1.59300007566344, 1.59300007566344, 1.59300007566344, 1.59300007566344, 1.59300007566344, 1.59300007566344, 1.59300007566344, 1.59300007566344, 1.591000075568445, 1.591000075568445, 1.59300007566344, 1.59300007566344, 1.5940000757109374, 1.5940000757109374, 1.5940000757109374, 1.5960000758059323, 1.5960000758059323, 1.5970000758534297, 1.5990000759484246, 1.5990000759484246, 1.5990000759484246, 1.6010000760434195, 1.602000076090917, 1.602000076090917, 1.604000076185912, 1.602000076090917, 1.604000076185912, 1.604000076185912, 1.604000076185912, 1.604000076185912, 1.602000076090917, 1.602000076090917, 1.602000076090917, 1.602000076090917, 1.602000076090917, 1.602000076090917, 1.6010000760434195, 1.6010000760434195, 1.6010000760434195, 1.602000076090917, 1.602000076090917, 1.602000076090917, 1.602000076090917, 1.602000076090917, 1.604000076185912, 1.604000076185912, 1.604000076185912, 1.604000076185912, 1.6060000762809068, 1.6060000762809068, 1.604000076185912, 1.604000076185912, 1.604000076185912, 1.6060000762809068, 1.6060000762809068, 1.6060000762809068, 1.6060000762809068, 1.6060000762809068, 1.6070000763284042, 1.6070000763284042, 1.6090000764233992, 1.6100000764708966, 1.6120000765658915, 1.6140000766608864, 1.6150000767083839, 1.6170000768033788, 1.6190000768983737, 1.6200000769458711, 1.622000077040866, 1.624000077135861, 1.6270000772783533, 1.6290000773733482, 1.6300000774208456, 1.6340000776108354, 1.6340000776108354, 1.6410000779433176, 1.642000077990815, 1.6460000781808048, 1.6470000782283023, 1.6490000783232972, 1.653000078513287, 1.6600000788457692, 1.6630000789882615, 1.6670000791782513, 1.6700000793207437, 1.6720000794157386, 1.675000079558231, 1.6770000796532258, 1.6790000797482207, 1.6810000798432156, 1.6830000799382105, 1.686000080080703, 1.6900000802706927, 1.693000080413185, 1.6970000806031749, 1.7030000808881596, 1.7080000811256468, 1.7210000817431137]
	depth_vec = depth[y1:y2 , x1]
	x , y = [] , []

	print('length of depth_vec : ' , len(depth_vec))

	plt.barh(np.arange(len(depth_vec)), depth_vec)
	#plt.show()
	length = integeration.length_of_depth_vec(depth_vec )
	print('Arc: ',length*39.37)


	#plt.barh(np.arange(len(depth_vec)), depth_vec)
	#plt.show()

	#print(depth_vec)
# 1.) now we split the depth_vec in 5 partitions
	NO_OF_PARTITIONS = 20#int(len(depth_vec) / 2 )
	size = int(len(depth_vec) / NO_OF_PARTITIONS)
	partitions = []

	for i in range(NO_OF_PARTITIONS):
		if i == NO_OF_PARTITIONS - 1:
			partitions.append( depth_vec[i*size:len(depth_vec)] )
		else:
			partitions.append(depth_vec[i*size:(i+1)*size])

	# 2.) Find the index of min and min value in each partition
	start = (0 , depth_vec[0])
	x.append(start[0]) , y.append(start[1])
	connections = [start]


	for i in range(len(partitions)):
		connections.append( (np.argmin(partitions[i]) + size*i , np.min(partitions[i])) )
		x.append(np.argmin(partitions[i]) + size*i) , y.append(np.min(partitions[i]))


	end = (len(depth_vec) - 1 , depth_vec[-1])
	x.append(end[0]) , y.append(end[1])
	connections.append(end)

	#A = ( np.argmin(a) + size*0  , np.min(a))
	#B = ( np.argmin(b) + size*1  , np.min(b))
	#C = ( np.argmin(c) + size*2  , np.min(c))
	#D = ( np.argmin(d) + size*3  , np.min(d))
	#E = ( np.argmin(e) + size*4  , np.min(e))
	#F = ( np.argmin(f) + size*5  , np.min(f))
	#G = ( np.argmin(g) + size*6  , np.min(g))
	#H = ( np.argmin(h) + size*7  , np.min(h))
	#I = ( np.argmin(i) + size*8  , np.min(i))
	#J = ( np.argmin(j) + size*9  , np.min(j))

	#start = (0 , depth_vec[0])
	#end = (len(depth_vec) - 1 , depth_vec[-1])
	#print(a,b,c,d,e)

	# 3.) create lines between each split
	print(connections)
	line_segments = []
	for i in range(len(connections) - 1):
		slope = (connections[i+1][1] - connections[i][1]) / (connections[i+1][0] - connections[i][0]) 
		line_seg = [ (connections[i][1] + k*slope) for k in range(connections[i+1][0] - connections[i][0]) ]
		line_segments.append(line_seg)




	'''
	# start --> A:
	slope_a = (A[1] - start[1]) / (A[0] - start[0])
	print(slope_a)
	line_a = [ (start[1] + i*slope_a) for i in range(A[0]) ]

	# A --> B:
	slope_b = (B[1] - A[1]) / (B[0] - A[0])
	line_b = [(A[1] + i*slope_b) for i in range(B[0] - A[0]) ]

	# B --> C:
	slope_c = (C[1] - B[1]) / (C[0] - B[0])
	line_c = [(B[1] + i*slope_c) for i in range(C[0] - B[0]) ]

	# C --> D:
	slope_d = (D[1] - C[1]) / (D[0] - C[0])
	line_d = [(C[1] + i*slope_d) for i in range(D[0] - C[0]) ]

	# D --> E:
	slope_e = (E[1] - D[1]) / (E[0] - D[0])
	line_e = [(D[1] + i*slope_e) for i in range(E[0] - D[0]) ]

	# E --> F
	slope_f = (F[1] - E[1]) / (F[0] - E[0])
	line_f = [(E[1] + i*slope_f) for i in range(F[0] - E[0]) ]

	# F --> G
	slope_g = (G[1] - F[1]) / (G[0] - F[0])
	line_g = [(F[1] + i*slope_g) for i in range(G[0] - F[0]) ]

	#G --> H
	slope_h = (H[1] - G[1]) / (H[0] - G[0])
	line_h = [(G[1] + i*slope_h) for i in range(H[0] - G[0]) ]

	# H --> I
	slope_i = (I[1] - H[1]) / (I[0] - H[0])
	line_i = [(H[1] + i*slope_i) for i in range(I[0] - H[0]) ]

	# I --> J
	slope_j = (J[1] - I[1]) / (J[0] - I[0])
	line_j = [(I[1] + i*slope_j) for i in range(J[0] - I[0]) ]

	# J --> end
	slope_end = (end[1] - J[1]) / (end[0] - J[0])
	line_end = [(J[1] + i*slope_end) for i in range(end[0] - J[0]) ]
	'''

	depth_vec_new = []
	for i in line_segments:
		depth_vec_new += i
	
	length = integeration.length_of_depth_vec(depth_vec_new )
	#print('Arc: ',length*39.37)
	
	#plt.barh(np.arange(len(depth_vec_new)), depth_vec_new , color = 'red')
	
	for i in zip(y,x):
		plt.plot(i[0] , i[1] , 'go')
	plt.show()



main()
